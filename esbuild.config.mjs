import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import copy from 'esbuild-plugin-copy-watch';
import dotenv from 'dotenv';
import { promises as fs } from 'fs';
import path from 'path';

dotenv.config();
const { PLUGIN_DEST_PATH } = process.env;
console.log('plugin dest path:', PLUGIN_DEST_PATH);

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';

esbuild
  .build({
    banner: {
      js: banner,
    },
    entryPoints: ['main.ts'],
    bundle: true,
    external: [
      'obsidian',
      'electron',
      '@codemirror/autocomplete',
      '@codemirror/collab',
      '@codemirror/commands',
      '@codemirror/language',
      '@codemirror/lint',
      '@codemirror/search',
      '@codemirror/state',
      '@codemirror/view',
      '@lezer/common',
      '@lezer/highlight',
      '@lezer/lr',
      ...builtins,
    ],
    format: 'cjs',
    watch: !prod && {
      async onRebuild(error, result) {
        if (error) {
          console.error('watch build failed:', error);
          return;
        }
        console.log('watch build succeeded');
        if (!PLUGIN_DEST_PATH) {
          console.log('no dest, file copy skipped');
          return;
        }
        try {
          console.log('start copying files...');
          await fs.cp(path.resolve('./build'), PLUGIN_DEST_PATH, {
            recursive: true,
            force: true,
          });
          console.log('bundled file copied to dest');
        } catch (err) {
          console.error('error while copying files', err);
        }
        // echo $PATH_LIST_MANAGER_PLUGIN
        // mkdir -p $PATH_LIST_MANAGER_PLUGIN
        // cp -f ./build/* $PATH_LIST_MANAGER_PLUGIN
      },
    },
    target: 'es2018',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outdir: 'build',
    plugins: [
      copy([
        { from: 'manifest.json' },
        { from: 'styles.css' },
        { from: 'versions.json' },
      ]),
    ],
  })
  .then(async () => {
    if (!PLUGIN_DEST_PATH) {
      console.log('no dest, file copy skipped');
      return;
    }
    try {
      console.log('start copying files...');
      await fs.cp(path.resolve('./build'), PLUGIN_DEST_PATH, {
        recursive: true,
      });
      console.log('bundled file copied to dest');
    } catch (err) {
      console.error('error while copying files', err);
    }
  })
  .catch(() => process.exit(1));
